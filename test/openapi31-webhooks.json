{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI 3.1 Webhooks Test",
    "version": "1.0.0"
  },
  "paths": {
    "/users": {
      "post": {
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/webhook-payload": {
      "get": {
        "operationId": "getWebhookPayload",
        "responses": {
          "200": {
            "description": "Example webhook payload structure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookPayload"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "userCreated": {
      "post": {
        "operationId": "userCreatedWebhook",
        "summary": "User created webhook",
        "description": "Sent when a user is created",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook received successfully"
          }
        }
      }
    },
    "userUpdated": {
      "post": {
        "operationId": "userUpdatedWebhook",
        "summary": "User updated webhook",
        "description": "Sent when a user is updated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "discriminator": {
          "propertyName": "userType",
          "mapping": {
            "regular": "#/components/schemas/RegularUser",
            "admin": "#/components/schemas/AdminUser"
          }
        },
        "required": ["id", "name", "userType"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "enum": ["regular", "admin"]
          }
        }
      },
      "RegularUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "userType": {
                "const": "regular"
              },
              "subscription": {
                "type": "string",
                "enum": ["free", "premium"]
              }
            }
          }
        ]
      },
      "AdminUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "userType": {
                "const": "admin"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["read", "write", "delete", "manage"]
                }
              }
            }
          }
        ]
      },
      "WebhookPayload": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {
            "type": "string",
            "enum": ["user.created", "user.updated", "user.deleted"]
          },
          "data": {
            "$ref": "#/components/schemas/User"
          },
          "version": {
            "const": "1.0"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
